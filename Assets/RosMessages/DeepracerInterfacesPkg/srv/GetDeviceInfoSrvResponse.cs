//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class GetDeviceInfoSrvResponse : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/GetDeviceInfoSrv";
        public override string RosMessageName => k_RosMessageName;

        //  String with the hardware information of the DeepRacer device.
        public string hardware_version;
        //  String with the software information about the aws-deepracer-core package.
        public string software_version;
        //  Error flag indicating successful/failed service call.
        public int error;

        public GetDeviceInfoSrvResponse()
        {
            this.hardware_version = "";
            this.software_version = "";
            this.error = 0;
        }

        public GetDeviceInfoSrvResponse(string hardware_version, string software_version, int error)
        {
            this.hardware_version = hardware_version;
            this.software_version = software_version;
            this.error = error;
        }

        public static GetDeviceInfoSrvResponse Deserialize(MessageDeserializer deserializer) => new GetDeviceInfoSrvResponse(deserializer);

        private GetDeviceInfoSrvResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.hardware_version);
            deserializer.Read(out this.software_version);
            deserializer.Read(out this.error);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.hardware_version);
            serializer.Write(this.software_version);
            serializer.Write(this.error);
        }

        public override string ToString()
        {
            return "GetDeviceInfoSrvResponse: " +
            "\nhardware_version: " + hardware_version.ToString() +
            "\nsoftware_version: " + software_version.ToString() +
            "\nerror: " + error.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
