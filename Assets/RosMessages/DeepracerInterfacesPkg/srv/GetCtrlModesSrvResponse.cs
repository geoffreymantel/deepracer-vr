//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class GetCtrlModesSrvResponse : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/GetCtrlModesSrv";
        public override string RosMessageName => k_RosMessageName;

        //  Get the list of modes available in Ctrl Pkg
        public int[] modes;
        //  Error flag indicating successful/failed service call.
        public int error;

        public GetCtrlModesSrvResponse()
        {
            this.modes = new int[0];
            this.error = 0;
        }

        public GetCtrlModesSrvResponse(int[] modes, int error)
        {
            this.modes = modes;
            this.error = error;
        }

        public static GetCtrlModesSrvResponse Deserialize(MessageDeserializer deserializer) => new GetCtrlModesSrvResponse(deserializer);

        private GetCtrlModesSrvResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.modes, sizeof(int), deserializer.ReadLength());
            deserializer.Read(out this.error);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.modes);
            serializer.Write(this.modes);
            serializer.Write(this.error);
        }

        public override string ToString()
        {
            return "GetCtrlModesSrvResponse: " +
            "\nmodes: " + System.String.Join(", ", modes.ToList()) +
            "\nerror: " + error.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
