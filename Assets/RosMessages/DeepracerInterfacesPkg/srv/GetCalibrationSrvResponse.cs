//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class GetCalibrationSrvResponse : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/GetCalibrationSrv";
        public override string RosMessageName => k_RosMessageName;

        //  Maximum PWM value as per the caibration file.
        public int max;
        //  Mid PWM value as per the caibration file.
        public int mid;
        //  Minimum PWM value as per the caibration file.
        public int min;
        //  Polarity value as per the caibration file.
        public int polarity;
        //  Error flag indicating successful/failed service call.
        public int error;

        public GetCalibrationSrvResponse()
        {
            this.max = 0;
            this.mid = 0;
            this.min = 0;
            this.polarity = 0;
            this.error = 0;
        }

        public GetCalibrationSrvResponse(int max, int mid, int min, int polarity, int error)
        {
            this.max = max;
            this.mid = mid;
            this.min = min;
            this.polarity = polarity;
            this.error = error;
        }

        public static GetCalibrationSrvResponse Deserialize(MessageDeserializer deserializer) => new GetCalibrationSrvResponse(deserializer);

        private GetCalibrationSrvResponse(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.max);
            deserializer.Read(out this.mid);
            deserializer.Read(out this.min);
            deserializer.Read(out this.polarity);
            deserializer.Read(out this.error);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.max);
            serializer.Write(this.mid);
            serializer.Write(this.min);
            serializer.Write(this.polarity);
            serializer.Write(this.error);
        }

        public override string ToString()
        {
            return "GetCalibrationSrvResponse: " +
            "\nmax: " + max.ToString() +
            "\nmid: " + mid.ToString() +
            "\nmin: " + min.ToString() +
            "\npolarity: " + polarity.ToString() +
            "\nerror: " + error.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
