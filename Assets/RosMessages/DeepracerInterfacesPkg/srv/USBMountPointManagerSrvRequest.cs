//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class USBMountPointManagerSrvRequest : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/USBMountPointManagerSrv";
        public override string RosMessageName => k_RosMessageName;

        //  Node name value used to manage the mount points.
        public string node_name;
        //  Increment/decrement action values.
        public int action;

        public USBMountPointManagerSrvRequest()
        {
            this.node_name = "";
            this.action = 0;
        }

        public USBMountPointManagerSrvRequest(string node_name, int action)
        {
            this.node_name = node_name;
            this.action = action;
        }

        public static USBMountPointManagerSrvRequest Deserialize(MessageDeserializer deserializer) => new USBMountPointManagerSrvRequest(deserializer);

        private USBMountPointManagerSrvRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.node_name);
            deserializer.Read(out this.action);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.node_name);
            serializer.Write(this.action);
        }

        public override string ToString()
        {
            return "USBMountPointManagerSrvRequest: " +
            "\nnode_name: " + node_name.ToString() +
            "\naction: " + action.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
