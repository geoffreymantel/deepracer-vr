//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class ModelOptimizeSrvRequest : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/ModelOptimizeSrv";
        public override string RosMessageName => k_RosMessageName;

        //  Name of the model folder where the model.pb file is present.
        public string model_name;
        //  Identifiers for the sensors used by the model during training.
        public int[] model_metadata_sensors;
        //  Identifier for the training algorithm used by the model during training.
        public int training_algorithm;
        //  "BGR" / "RGB" image format required to be set to run optimizer.
        public string img_format;
        //  Width of the input image.
        public int width;
        //  Height of the input image.
        public int height;
        //  Number of channels of the input image.
        public int num_channels;
        //  Number of distance values the model expects for LiDAR head.
        public int lidar_channels;
        //  Identifier for the machine learning platform type used by the model during training.
        //  (Tensorflow, mxnet)
        public int platform;

        public ModelOptimizeSrvRequest()
        {
            this.model_name = "";
            this.model_metadata_sensors = new int[0];
            this.training_algorithm = 0;
            this.img_format = "";
            this.width = 0;
            this.height = 0;
            this.num_channels = 0;
            this.lidar_channels = 0;
            this.platform = 0;
        }

        public ModelOptimizeSrvRequest(string model_name, int[] model_metadata_sensors, int training_algorithm, string img_format, int width, int height, int num_channels, int lidar_channels, int platform)
        {
            this.model_name = model_name;
            this.model_metadata_sensors = model_metadata_sensors;
            this.training_algorithm = training_algorithm;
            this.img_format = img_format;
            this.width = width;
            this.height = height;
            this.num_channels = num_channels;
            this.lidar_channels = lidar_channels;
            this.platform = platform;
        }

        public static ModelOptimizeSrvRequest Deserialize(MessageDeserializer deserializer) => new ModelOptimizeSrvRequest(deserializer);

        private ModelOptimizeSrvRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.model_name);
            deserializer.Read(out this.model_metadata_sensors, sizeof(int), deserializer.ReadLength());
            deserializer.Read(out this.training_algorithm);
            deserializer.Read(out this.img_format);
            deserializer.Read(out this.width);
            deserializer.Read(out this.height);
            deserializer.Read(out this.num_channels);
            deserializer.Read(out this.lidar_channels);
            deserializer.Read(out this.platform);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.model_name);
            serializer.WriteLength(this.model_metadata_sensors);
            serializer.Write(this.model_metadata_sensors);
            serializer.Write(this.training_algorithm);
            serializer.Write(this.img_format);
            serializer.Write(this.width);
            serializer.Write(this.height);
            serializer.Write(this.num_channels);
            serializer.Write(this.lidar_channels);
            serializer.Write(this.platform);
        }

        public override string ToString()
        {
            return "ModelOptimizeSrvRequest: " +
            "\nmodel_name: " + model_name.ToString() +
            "\nmodel_metadata_sensors: " + System.String.Join(", ", model_metadata_sensors.ToList()) +
            "\ntraining_algorithm: " + training_algorithm.ToString() +
            "\nimg_format: " + img_format.ToString() +
            "\nwidth: " + width.ToString() +
            "\nheight: " + height.ToString() +
            "\nnum_channels: " + num_channels.ToString() +
            "\nlidar_channels: " + lidar_channels.ToString() +
            "\nplatform: " + platform.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
