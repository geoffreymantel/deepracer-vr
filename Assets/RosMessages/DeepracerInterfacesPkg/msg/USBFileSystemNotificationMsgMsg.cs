//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class USBFileSystemNotificationMsgMsg : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/USBFileSystemNotificationMsg";
        public override string RosMessageName => k_RosMessageName;

        //  Custom message with the details of file/folder found in the USB drive
        //  and corresponding subscriber callback details.
        // 
        //  This broadcast message is used to publish the file/folder information and
        //  its callback information that was set when subscribing to be notified if
        //  the file/folder is found in the USB drive.
        public string path;
        //  Path of the file in the temp mount system.
        public string file_name;
        //  File/folder name found.
        public string callback_name;
        //  Callback name that was sent while subscribing
        //  to be notified.
        public string node_name;
        //  Node name to manage dereferencing the mount point
        //  after the processing of the file/folder is completed.

        public USBFileSystemNotificationMsgMsg()
        {
            this.path = "";
            this.file_name = "";
            this.callback_name = "";
            this.node_name = "";
        }

        public USBFileSystemNotificationMsgMsg(string path, string file_name, string callback_name, string node_name)
        {
            this.path = path;
            this.file_name = file_name;
            this.callback_name = callback_name;
            this.node_name = node_name;
        }

        public static USBFileSystemNotificationMsgMsg Deserialize(MessageDeserializer deserializer) => new USBFileSystemNotificationMsgMsg(deserializer);

        private USBFileSystemNotificationMsgMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.path);
            deserializer.Read(out this.file_name);
            deserializer.Read(out this.callback_name);
            deserializer.Read(out this.node_name);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.path);
            serializer.Write(this.file_name);
            serializer.Write(this.callback_name);
            serializer.Write(this.node_name);
        }

        public override string ToString()
        {
            return "USBFileSystemNotificationMsgMsg: " +
            "\npath: " + path.ToString() +
            "\nfile_name: " + file_name.ToString() +
            "\ncallback_name: " + callback_name.ToString() +
            "\nnode_name: " + node_name.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
