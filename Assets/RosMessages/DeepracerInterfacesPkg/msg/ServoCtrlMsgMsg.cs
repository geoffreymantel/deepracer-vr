//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.DeepracerInterfacesPkg
{
    [Serializable]
    public class ServoCtrlMsgMsg : Message
    {
        public const string k_RosMessageName = "deepracer_interfaces_pkg/ServoCtrlMsg";
        public override string RosMessageName => k_RosMessageName;

        //  Custom message with throttle and steering angle values.
        // 
        //  This message is used to send motor throttle and servo steering angle
        //  ratios with respect to the device calibration. It can also be used to
        //  send raw PWM values for angle and throttle.
        public float angle;
        //  Angle ratio w.r.t steering_max/steering_min
        //  in calibration file or raw PWM value to be sent
        //  to the servo.
        public float throttle;
        //  Throttle ratio w.r.t speed_max/speed_min
        //  in calibration file or raw PWM value to be sent
        //  to the motor.   

        public ServoCtrlMsgMsg()
        {
            this.angle = 0.0f;
            this.throttle = 0.0f;
        }

        public ServoCtrlMsgMsg(float angle, float throttle)
        {
            this.angle = angle;
            this.throttle = throttle;
        }

        public static ServoCtrlMsgMsg Deserialize(MessageDeserializer deserializer) => new ServoCtrlMsgMsg(deserializer);

        private ServoCtrlMsgMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.angle);
            deserializer.Read(out this.throttle);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.angle);
            serializer.Write(this.throttle);
        }

        public override string ToString()
        {
            return "ServoCtrlMsgMsg: " +
            "\nangle: " + angle.ToString() +
            "\nthrottle: " + throttle.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
